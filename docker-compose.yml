# Docker compose debe correr en la carpeta principal del usuario principal
# QUITAR PREBUILD UNA VEZ QUE YA CORRIO POR PRIMERA VEZ EL DOCKER-COMPOSE 

services:
  # PREBUILD
  prebuild:
    image: alpine:edge
    container_name: prebuild
    volumes:
      - ./nginx:/mnt/nginx
    command: /bin/sh -c "touch /mnt/nginx/nginx.conf && echo 'events { worker_connections 1024; } http { server_tokens off; charset utf-8; server { listen 80 default_server; server_name _; location / { proxy_pass http://node:3000; } location ~ /.well-known/acme-challenge/ { root /var/www/certbot; } } }' > /mnt/nginx/nginx.conf"

  # NODE
  node:
    image: sen00/node-nginx-ssl:node
    restart: unless-stopped
    container_name: node
    user: "node"
    environment:
      - NODE_ENV=production

  # NGINX
  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx:stable-perl
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx
      # hasta aqui todo funciona bien ----------------
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  # CERTBOT
  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email a01703572@tec.mx -d senservers.com --agree-tos

  # POSTBUILD
  postbuild:
    image: alpine:edge
    container_name: postbuild
    depends_on:
      - node
      - nginx
      - certbot
    volumes:
      - ./nginx:/mnt/nginx
    command: /bin/sh -c "echo 'events { worker_connections 1024; } http { server_tokens off; charset utf-8; server { listen 80 default_server; server_name _; location ~ /.well-known/acme-challenge/ { root /var/www/certbot; } return 301 https://senservers.com; } server { listen 443 ssl http2; ssl_certificate /etc/letsencrypt/live/senservers.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/senservers.com/privkey.pem; server_name senservers.com; root /var/www/html; index index.php index.html index.htm; location / { proxy_pass http://node:3000; } location ~ /.well-known/acme-challenge/ { root /var/www/certbot; } } }' > /mnt/nginx/nginx.conf"
